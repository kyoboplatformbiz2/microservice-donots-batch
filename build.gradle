buildscript {
	ext {
		springBootVersion = '2.7.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}')
	}
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.kyobo.platform.donots.batch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.jcraft:jsch:0.1.55'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.vladmihalcea:hibernate-types-55:2.21.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'

	implementation 'com.amazonaws:aws-java-sdk:1.12.334'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.281'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
bootJar {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
tasks {
	processResources {
		duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
	}
}
