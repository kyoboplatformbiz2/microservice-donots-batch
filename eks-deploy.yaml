apiVersion: v1
kind: Service
metadata:
  name: dev-batch
spec:
  type: NodePort
  selector:
    app: dev-batch
  ports:
    - protocol: TCP
      port: 9080
      targetPort: 9080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-batch
  namespace: default
  labels:
    app: dev-batch
spec:
  # 테스트를 위해 우선 1개로 지정
  replicas: 1
  selector:
    matchLabels:
      app: dev-batch
      
#  strategy:
#    rollingUpdate:
#      maxSurge: 1
#      maxUnavailable: 1
#    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dev-batch
    spec:
      containers:
        - name: dev-batch
          image: AWS_ECR_URI
          ports:
            - containerPort: 9080
          imagePullPolicy: Always
#          command: ["/bin/sh", "-ec", "while :; do echo '.'; sleep 5 ; done"]
#          resources:
#            requests:
#              cpu: "256m"
#              memory: "512Mi"
#            limits:
#              cpu: "256m"
#              memory: "512Mi"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-batch
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:677284563273:certificate/688cbcb3-6bb2-433e-8de2-bacc6f982d26
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: 200,301,403,404
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: eks-batch-group
    alb.ingress.kubernetes.io/group.order: '1'
spec:
  rules:
  - host: dev-batch.donotdev.tk
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dev-batch
            port:
              number: 9080